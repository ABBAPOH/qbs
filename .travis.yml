#
# Required environment variables in the travis config
#
# DOCKER_USERNAME
#
language: cpp
cache: ccache

git:
  submodules: false

env:
  global:
    - QT_INSTALL_DIR=~/Qt
    - QT_VERSION=5.12.6
    - QTCREATOR_VERSION=4.10.2

stages:
  - name: Build Qbs and and run autotests

jobs:
  include:
    - &build-on-bionic
      stage: Build Qbs and and run autotests
      name: With Qbs on Ubuntu bionic (linux_gcc64)
      env:
        BUILD_OPTIONS=modules.cpp.compilerWrapper:ccache
      services:
        - docker
      before_script:
        - docker-compose pull bionic
        - ccache -M 5G
        - ccache -s
      after_script:
        - ccache -s
      script:
        - docker-compose run bionic scripts/build-qbs-with-qbs.sh

    - <<: *build-on-bionic
      name: With QMake on Ubuntu bionic (linux_gcc64)
      env:
        BUILD_OPTIONS="CONFIG+=ccache"
      script:
        - docker-compose run bionic scripts/build-qbs-with-qmake.sh

    - <<: *build-on-bionic
      name: With Qbs on Ubuntu bionic (mingw32_w64)
      env:
        BUILD_OPTIONS="profile:qt-mingw32_w64 modules.cpp.compilerWrapper:ccache modules.cpp.treatWarningsAsErrors:true config:release"
      script:
        - docker-compose run bionic qbs build ${BUILD_OPTIONS}

    - <<: *build-on-bionic
      name: With Qbs on Ubuntu bionic (linux_clang64 & clang_tidy)
      env:
        BUILD_OPTIONS="profile:qt-clang_64 modules.cpp.compilerWrapper:ccache"
      services:
        - docker
      script:
        - docker-compose run --rm bionic scripts/run-analyzer.sh

    - <<: *build-on-bionic
      name: With Qbs and with Qt for Android (Qt 5.13)
      before_install:
        - docker-compose pull bionic
        - docker-compose pull bionic-android-513
      script:
        - docker-compose run bionic qbs build modules.cpp.compilerWrapper:ccache modules.qbsbuildconfig.enableBundledQt:true config:release
        - docker-compose run bionic-android-513 scripts/test-qt-for-android.sh release/install-root/usr/local/bin

    - &build-on-macos
      stage: Build Qbs and and run autotests
      name: With Qbs on macOS (xcode 11.3)
      os: osx
      osx_image: xcode11.3
      addons:
        homebrew:
          packages:
            - p7zip
            - ccache
          update: true
      env:
        # Address sanitizer slows autotests down too much.
        # We would hit the maximum build time on Travis.
        BUILD_OPTIONS="modules.qbsbuildconfig.enableAddressSanitizer:false modules.cpp.compilerWrapper:ccache"
        QMAKE_PATH=${QT_INSTALL_DIR}/${QT_VERSION}/clang_64/bin/qmake
        PATH="${QT_INSTALL_DIR}/Qt Creator.app/Contents/MacOS:${PATH}"
        QBS_BUILD_PROFILE=qt
      before_install:
        - ./scripts/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} qtbase qtdeclarative qttools qtscript
        - ./scripts/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QTCREATOR_VERSION} qtcreator
        - pip2 install --user beautifulsoup4 lxml
      script:
        - ccache -s
        - qbs setup-toolchains --detect
        - qbs setup-qt ${QMAKE_PATH} qt
        - qbs config qt.baseProfile xcode-macosx-x86_64
        - qbs config defaultProfile qt
        - scripts/build-qbs-with-qbs.sh
        - ccache -s

    - <<: *build-on-macos
      name: With Qbs on macOS (xcode 10.3)
      osx_image: xcode10.3
      if: branch = master

    - <<: *build-on-macos
      name: With Qbs on macOS (xcode 9.4)
      osx_image: xcode9.4

    - &build-on-windows
      stage: Build Qbs and and run autotests
      name: With Qbs on Windows (Visual Studio 2017)
      os: windows
      env:
        # Need to build in release mode. Otherwise autotests would be too slow.
        BUILD_OPTIONS="config:release modules.cpp.compilerWrapper:clcache"
        QT_INSTALL_DIR=C:/Qt
        QMAKE_PATH=${QT_INSTALL_DIR}/${QT_VERSION}/msvc2017_64/bin/qmake.exe
        PATH="/c/Qt/Tools/QtCreator/bin:/c/Python38:/c/Python39:/c/Python38/Scripts:/c/Python39/Scripts:${PATH}"
        WITH_DOCS=0
        QBS_BUILD_PROFILE=qt
        CLCACHE_DIR="${HOME}/.ccache"
      before_install:
        # Install Qbs and Qt
        - ./scripts/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} --toolchain win64_msvc2017_64 qtbase qtdeclarative qttools qtscript
        - ./scripts/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QTCREATOR_VERSION} qtcreator
        - choco install python
        - pip install git+https://github.com/frerich/clcache.git@cae73d8255d78db8ba11e23c51fd2c9a89e7475b
      script:
        - clcache -s
        - qbs setup-toolchains --detect
        - qbs setup-qt ${QMAKE_PATH} qt
        - qbs config qt.baseProfile MSVC2017-x64
        - qbs config defaultProfile qt
        - scripts/build-qbs-with-qbs.sh
        - clcache -s
